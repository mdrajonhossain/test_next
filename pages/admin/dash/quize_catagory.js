import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
const inter = Inter({ subsets: ['latin'] })
import React, { useState, useEffect } from 'react';
import Link from 'next/link'
import Leftdiv from './ass/Leftdiv';
import Topbar from './ass/Topbar';
import { CiBoxList } from "react-icons/ci";
import axios from 'axios';
import Table from 'react-bootstrap/Table';





export default function Quize_catagory() {



  const [caname, setCaname] = useState('');
  const [view, setView] = useState(null);
  const [dbimg, setDbimg] = useState(null);
  const [public_allow, setPublic_allow] = useState('');

  const [success_message, setSuccess_message] = useState(false);
  const [get_success_data, setGet_success_data] = useState([]);

  const [loadbutton, setLoadbutton] = useState(false)

  const [showtable, setShowtable] = useState(false)



  function namehandleChange(event) {
    setCaname(event.target.value);
  }


  function changePhotoHandaller(file) {
    setDbimg(file[0]);
    setView(URL.createObjectURL(file[0]))
  }


  function capublic_handleChange(event) {
    setPublic_allow(event.target.value);
  }


  async function sendingaction(e) {

    if (caname != "" && dbimg != null) {
      setLoadbutton(true)
      const formData = new FormData();
      const db = { caname: caname, dbimg: dbimg, public_allow: public_allow }
      formData.append('caname', caname);
      formData.append('file', dbimg);
      formData.append('public_allow', public_allow);
      await axios.post('/api/quizecatagory', formData)
        .then(response => {
          if (response.data.data) {
            setView("");
            setCaname("");
            setSuccess_message(true);
            setLoadbutton(false);
          }
        })
    } else {
      console.log("asdfsadf");
    }
  }


  async function getdatashow() {

    await axios.get('/api/get_quize_catagory')
      .then(response => {
        setGet_success_data(response.data.data)
      })
  }

  async function dublic_getdatashow() {
    setShowtable(!showtable);
    getdatashow();
  }





  const public_allowfunct = (data) => {


    const allowsss = data.public_allow === 0 ? 1 : 0;

    const dataa = {
      "allow": allowsss,
      "_id": data._id
    }
    axios.post('/api/public_allow', dataa)
      .then(response => {
        getdatashow()
      })

  }



  return (
    <>
      <Head>
        <title>Shikhon School-quize_catagory</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main>


        <Topbar />


        <div className="main">
          <div className="left_side">
            <Leftdiv />
          </div>




          <div className="right_side">
            <div className="page_header"><CiBoxList size={28} />&nbsp; Quze Catagory</div>
            <div className="showdata" onClick={() => dublic_getdatashow()}>&nbsp; Show Data</div>

            {success_message ? <div className='success_message' onClick={() => setSuccess_message(false)}>Quize Catagory Insert Successfully </div> : ' '}

            {loadbutton ? <div className='loadbutton'><div class="loader"></div></div> : ' '}

            <div className={showtable ? 'showdata_table' : 'no_showdata_table'}>
              <div className='main_table'>
                <div className='close_tab' onClick={() => setShowtable(!showtable)}>Close</div>
                <Table className="table">
                  <thead>
                    <tr>
                      <th>SL</th>
                      <th> Quize Catagory Image</th>
                      <th>Catagory Name</th>
                      <th>Action</th>
                    </tr>
                  </thead>
                  <tbody>
                    {get_success_data.map((data, index) => {
                      return (
                        <tr key={index}>
                          <td>{index + 1}</td>
                          <td><img src={data.cat_img} width="90" height="70" /></td>
                          <td>{data.caname}</td>
                          <td>
                            <button className='quize_cata_delete_btn' onClick={() => public_allowfunct(data)}>{data.public_allow === 0 ? "Not Public Allow" : "Public Allow"}</button>
                            <button className='quize_cata_delete_btn'>Delete</button>
                          </td>
                        </tr>
                      )
                    })
                    }
                  </tbody>
                </Table>
              </div>
            </div>


            <label htmlFor="name"> Catagory Name :</label>
            <div className="caname">
              <input type="text" value={caname} onChange={namehandleChange} id="cata_name" className="cata_name" name="user_name" />
            </div>

            <label htmlFor="name"> Catagory Image :</label>
            <input type="file" name="cat_img" onChange={(e) => changePhotoHandaller(e.target.files)} style={{ width: '80%' }} />
            <div className="show_img">
              <img src={view} width="100" height="100" />
            </div>

            <label htmlFor="name"> Catagory Public (Yes) ? : </label>

            <select onChange={capublic_handleChange} className="public_allow">
              <option value="0">No</option>
              <option value="1">Yes</option>
            </select>
            <br />

            <button className="catasave" onClick={() => sendingaction()}>Save</button>

            <br />





          </div>














        </div>
      </main>
    </>
  )
}
